Directory structure:
└── flask-react-gunpla-app/
    ├── backend/
    │   ├── app.py
    │   ├── config.py
    │   ├── models.py
    │   ├── resources.py
    │   ├── test.py
    │   └── .pytest_cache/
    │       └── README.md
    └── frontend/
        ├── index.html
        ├── package-lock.json
        ├── package.json
        ├── sanity-check.js
        ├── vite.config.js
        └── src/
            ├── App.jsx
            ├── index.css
            ├── main.jsx
            ├── components/
            │   ├── GunplaForm.jsx
            │   ├── GunplaItem.jsx
            │   └── GunplaList.jsx
            └── context/
                └── GunplaContext.jsx

================================================
File: backend/app.py
================================================
# flask-gunpla-api/app.py
from flask import Flask
from flask_restful import Api
from flask_cors import CORS  # NEW: Import flask_cors
from config import Config
from models import db
from resources import GunplaListResource, GunplaResource
import os

def create_app(config_class=Config):
    app = Flask(__name__)
    app.config.from_object(config_class)

    # Compute the allowed origin dynamically
    # Use environment variables: CODESPACE_NAME, REACT_PORT (default to 5173)
    codespace_name = os.environ.get('CODESPACE_NAME')
    react_port = os.environ.get('REACT_PORT', '5173')
    if codespace_name:
        allowed_origin = f"https://{codespace_name}-{react_port}.app.github.dev"
    else:
        allowed_origin = "http://localhost:5173"
    
    # Enable CORS for the Flask API, allowing requests only from the React app's URL.
    CORS(app, origins=[allowed_origin])

    # Initialize the database with the app
    db.init_app(app)
    with app.app_context():
        db.create_all()

    api = Api(app)
    api.add_resource(GunplaListResource, '/gunplas')
    api.add_resource(GunplaResource, '/gunplas/<int:gunpla_id>')

    return app

if __name__ == '__main__':
    app = create_app()
    app.run(debug=True)

================================================
File: backend/config.py
================================================
import os

basedir = os.path.abspath(os.path.dirname(__file__))


class Config:
    SQLALCHEMY_DATABASE_URI = 'sqlite:///' + os.path.join(basedir, 'gunpla.db')
    SQLALCHEMY_TRACK_MODIFICATIONS = False
    DEBUG = True


class TestingConfig(Config):
    TESTING = True
    SQLALCHEMY_DATABASE_URI = 'sqlite:///:memory:'
    DEBUG = False

================================================
File: backend/models.py
================================================
from flask_sqlalchemy import SQLAlchemy

db = SQLAlchemy()


class Gunpla(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), nullable=False)
    series = db.Column(db.String(120), nullable=False)
    grade = db.Column(db.String(50), nullable=False)
    scale = db.Column(db.String(20), nullable=True)

    def to_dict(self):
        return {
            'id': self.id,
            'name': self.name,
            'series': self.series,
            'grade': self.grade,
            'scale': self.scale
        }

================================================
File: backend/resources.py
================================================
from flask_restful import Resource, reqparse
from models import db, Gunpla

# Configure request parser to expect JSON input
gunpla_parser = reqparse.RequestParser()
gunpla_parser.add_argument('name', type=str, required=True, help="Name field is required.", location='json')
gunpla_parser.add_argument('series', type=str, required=True, help="Series field is required.", location='json')
gunpla_parser.add_argument('grade', type=str, required=True, help="Grade field is required.", location='json')
gunpla_parser.add_argument('scale', type=str, location='json')


class GunplaListResource(Resource):
    def get(self):
        gunplas = Gunpla.query.all()
        return [gunpla.to_dict() for gunpla in gunplas], 200

    def post(self):
        args = gunpla_parser.parse_args()
        new_gunpla = Gunpla(
            name=args['name'],
            series=args['series'],
            grade=args['grade'],
            scale=args.get('scale')
        )
        db.session.add(new_gunpla)
        db.session.commit()
        return new_gunpla.to_dict(), 201


class GunplaResource(Resource):
    def get(self, gunpla_id):
        # Use Session.get() instead of Query.get()
        gunpla = db.session.get(Gunpla, gunpla_id)
        if gunpla is None:
            return {'message': 'Gunpla model not found'}, 404
        return gunpla.to_dict(), 200

    def put(self, gunpla_id):
        gunpla = db.session.get(Gunpla, gunpla_id)
        if gunpla is None:
            return {'message': 'Gunpla model not found'}, 404
        args = gunpla_parser.parse_args()
        gunpla.name = args['name']
        gunpla.series = args['series']
        gunpla.grade = args['grade']
        gunpla.scale = args.get('scale')
        db.session.commit()
        return gunpla.to_dict(), 200

    def delete(self, gunpla_id):
        gunpla = db.session.get(Gunpla, gunpla_id)
        if gunpla is None:
            return {'message': 'Gunpla model not found'}, 404
        db.session.delete(gunpla)
        db.session.commit()
        return {'message': 'Gunpla model deleted successfully'}, 200

================================================
File: backend/test.py
================================================
import pytest
from app import create_app
from config import TestingConfig
from models import db


@pytest.fixture
def client():
    app = create_app(TestingConfig)
    client = app.test_client()
    # Ensure the database tables are created for each test
    with app.app_context():
        db.drop_all()
        db.create_all()
    yield client


def test_create_gunpla(client):
    payload = {
        'name': 'RX-78-2 Gundam',
        'series': 'Mobile Suit Gundam',
        'grade': 'High Grade',
        'scale': '1/144'
    }
    response = client.post('/gunplas', json=payload)
    assert response.status_code == 201
    data = response.get_json()
    assert data['name'] == payload['name']
    assert 'id' in data


def test_get_all_gunplas(client):
    # Create two gunpla models
    gunplas = [
        {'name': 'RX-78-2 Gundam', 'series': 'Mobile Suit Gundam', 'grade': 'High Grade', 'scale': '1/144'},
        {'name': 'Zaku II', 'series': 'Mobile Suit Gundam', 'grade': 'Master Grade', 'scale': '1/100'}
    ]
    for gunpla in gunplas:
        client.post('/gunplas', json=gunpla)
    
    response = client.get('/gunplas')
    assert response.status_code == 200
    data = response.get_json()
    assert len(data) == 2


def test_get_single_gunpla(client):
    payload = {
        'name': 'MS-06 Zaku II',
        'series': 'Mobile Suit Gundam',
        'grade': 'Real Grade',
        'scale': '1/144'
    }
    post_response = client.post('/gunplas', json=payload)
    assert post_response.status_code == 201
    gunpla_id = post_response.get_json()['id']
    
    response = client.get(f'/gunplas/{gunpla_id}')
    assert response.status_code == 200
    data = response.get_json()
    assert data['id'] == gunpla_id


def test_update_gunpla(client):
    payload = {
        'name': 'RX-78-2 Gundam',
        'series': 'Mobile Suit Gundam',
        'grade': 'High Grade',
        'scale': '1/144'
    }
    post_response = client.post('/gunplas', json=payload)
    assert post_response.status_code == 201
    gunpla_id = post_response.get_json()['id']
    
    update_payload = {
        'name': 'RX-78-2 Gundam (Updated)',
        'series': 'Mobile Suit Gundam',
        'grade': 'Master Grade',
        'scale': '1/100'
    }
    response = client.put(f'/gunplas/{gunpla_id}', json=update_payload)
    assert response.status_code == 200
    data = response.get_json()
    assert data['name'] == update_payload['name']
    assert data['grade'] == update_payload['grade']


def test_delete_gunpla(client):
    payload = {
        'name': 'RX-78-2 Gundam',
        'series': 'Mobile Suit Gundam',
        'grade': 'High Grade',
        'scale': '1/144'
    }
    post_response = client.post('/gunplas', json=payload)
    assert post_response.status_code == 201
    gunpla_id = post_response.get_json()['id']
    
    response = client.delete(f'/gunplas/{gunpla_id}')
    assert response.status_code == 200
    data = response.get_json()
    assert data['message'] == 'Gunpla model deleted successfully'
    
    # Verify that the Gunpla model no longer exists
    response = client.get(f'/gunplas/{gunpla_id}')
    assert response.status_code == 404

================================================
File: backend/.pytest_cache/README.md
================================================
# pytest cache directory #

This directory contains data from the pytest's cache plugin,
which provides the `--lf` and `--ff` options, as well as the `cache` fixture.

**Do not** commit this to version control.

See [the docs](https://docs.pytest.org/en/stable/how-to/cache.html) for more information.


================================================
File: frontend/index.html
================================================
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Gunpla Frontend</title>
  </head>
  <body>
    <div id="root"></div>
    <script type="module" src="/src/main.jsx"></script>
  </body>
</html>

================================================
File: frontend/package-lock.json
================================================
{
    "name": "gunpla-frontend",
    "version": "1.0.0",
    "lockfileVersion": 3,
    "requires": true,
    "packages": {
        "": {
            "name": "gunpla-frontend",
            "version": "1.0.0",
            "dependencies": {
                "react": "^18.2.0",
                "react-dom": "^18.2.0"
            },
            "devDependencies": {
                "@vitejs/plugin-react": "^4.0.0",
                "vite": "^4.0.0"
            }
        },
        "node_modules/@ampproject/remapping": {
            "version": "2.3.0",
            "resolved": "https://registry.npmjs.org/@ampproject/remapping/-/remapping-2.3.0.tgz",
            "integrity": "sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==",
            "dev": true,
            "dependencies": {
                "@jridgewell/gen-mapping": "^0.3.5",
                "@jridgewell/trace-mapping": "^0.3.24"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/@babel/code-frame": {
            "version": "7.26.2",
            "resolved": "https://registry.npmjs.org/@babel/code-frame/-/code-frame-7.26.2.tgz",
            "integrity": "sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==",
            "dev": true,
            "dependencies": {
                "@babel/helper-validator-identifier": "^7.25.9",
                "js-tokens": "^4.0.0",
                "picocolors": "^1.0.0"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/compat-data": {
            "version": "7.26.8",
            "resolved": "https://registry.npmjs.org/@babel/compat-data/-/compat-data-7.26.8.tgz",
            "integrity": "sha512-oH5UPLMWR3L2wEFLnFJ1TZXqHufiTKAiLfqw5zkhS4dKXLJ10yVztfil/twG8EDTA4F/tvVNw9nOl4ZMslB8rQ==",
            "dev": true,
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/core": {
            "version": "7.26.8",
            "resolved": "https://registry.npmjs.org/@babel/core/-/core-7.26.8.tgz",
            "integrity": "sha512-l+lkXCHS6tQEc5oUpK28xBOZ6+HwaH7YwoYQbLFiYb4nS2/l1tKnZEtEWkD0GuiYdvArf9qBS0XlQGXzPMsNqQ==",
            "dev": true,
            "dependencies": {
                "@ampproject/remapping": "^2.2.0",
                "@babel/code-frame": "^7.26.2",
                "@babel/generator": "^7.26.8",
                "@babel/helper-compilation-targets": "^7.26.5",
                "@babel/helper-module-transforms": "^7.26.0",
                "@babel/helpers": "^7.26.7",
                "@babel/parser": "^7.26.8",
                "@babel/template": "^7.26.8",
                "@babel/traverse": "^7.26.8",
                "@babel/types": "^7.26.8",
                "@types/gensync": "^1.0.0",
                "convert-source-map": "^2.0.0",
                "debug": "^4.1.0",
                "gensync": "^1.0.0-beta.2",
                "json5": "^2.2.3",
                "semver": "^6.3.1"
            },
            "engines": {
                "node": ">=6.9.0"
            },
            "funding": {
                "type": "opencollective",
                "url": "https://opencollective.com/babel"
            }
        },
        "node_modules/@babel/generator": {
            "version": "7.26.8",
            "resolved": "https://registry.npmjs.org/@babel/generator/-/generator-7.26.8.tgz",
            "integrity": "sha512-ef383X5++iZHWAXX0SXQR6ZyQhw/0KtTkrTz61WXRhFM6dhpHulO/RJz79L8S6ugZHJkOOkUrUdxgdF2YiPFnA==",
            "dev": true,
            "dependencies": {
                "@babel/parser": "^7.26.8",
                "@babel/types": "^7.26.8",
                "@jridgewell/gen-mapping": "^0.3.5",
                "@jridgewell/trace-mapping": "^0.3.25",
                "jsesc": "^3.0.2"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/helper-compilation-targets": {
            "version": "7.26.5",
            "resolved": "https://registry.npmjs.org/@babel/helper-compilation-targets/-/helper-compilation-targets-7.26.5.tgz",
            "integrity": "sha512-IXuyn5EkouFJscIDuFF5EsiSolseme1s0CZB+QxVugqJLYmKdxI1VfIBOst0SUu4rnk2Z7kqTwmoO1lp3HIfnA==",
            "dev": true,
            "dependencies": {
                "@babel/compat-data": "^7.26.5",
                "@babel/helper-validator-option": "^7.25.9",
                "browserslist": "^4.24.0",
                "lru-cache": "^5.1.1",
                "semver": "^6.3.1"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/helper-module-imports": {
            "version": "7.25.9",
            "resolved": "https://registry.npmjs.org/@babel/helper-module-imports/-/helper-module-imports-7.25.9.tgz",
            "integrity": "sha512-tnUA4RsrmflIM6W6RFTLFSXITtl0wKjgpnLgXyowocVPrbYrLUXSBXDgTs8BlbmIzIdlBySRQjINYs2BAkiLtw==",
            "dev": true,
            "dependencies": {
                "@babel/traverse": "^7.25.9",
                "@babel/types": "^7.25.9"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/helper-module-transforms": {
            "version": "7.26.0",
            "resolved": "https://registry.npmjs.org/@babel/helper-module-transforms/-/helper-module-transforms-7.26.0.tgz",
            "integrity": "sha512-xO+xu6B5K2czEnQye6BHA7DolFFmS3LB7stHZFaOLb1pAwO1HWLS8fXA+eh0A2yIvltPVmx3eNNDBJA2SLHXFw==",
            "dev": true,
            "dependencies": {
                "@babel/helper-module-imports": "^7.25.9",
                "@babel/helper-validator-identifier": "^7.25.9",
                "@babel/traverse": "^7.25.9"
            },
            "engines": {
                "node": ">=6.9.0"
            },
            "peerDependencies": {
                "@babel/core": "^7.0.0"
            }
        },
        "node_modules/@babel/helper-plugin-utils": {
            "version": "7.26.5",
            "resolved": "https://registry.npmjs.org/@babel/helper-plugin-utils/-/helper-plugin-utils-7.26.5.tgz",
            "integrity": "sha512-RS+jZcRdZdRFzMyr+wcsaqOmld1/EqTghfaBGQQd/WnRdzdlvSZ//kF7U8VQTxf1ynZ4cjUcYgjVGx13ewNPMg==",
            "dev": true,
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/helper-string-parser": {
            "version": "7.25.9",
            "resolved": "https://registry.npmjs.org/@babel/helper-string-parser/-/helper-string-parser-7.25.9.tgz",
            "integrity": "sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==",
            "dev": true,
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/helper-validator-identifier": {
            "version": "7.25.9",
            "resolved": "https://registry.npmjs.org/@babel/helper-validator-identifier/-/helper-validator-identifier-7.25.9.tgz",
            "integrity": "sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==",
            "dev": true,
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/helper-validator-option": {
            "version": "7.25.9",
            "resolved": "https://registry.npmjs.org/@babel/helper-validator-option/-/helper-validator-option-7.25.9.tgz",
            "integrity": "sha512-e/zv1co8pp55dNdEcCynfj9X7nyUKUXoUEwfXqaZt0omVOmDe9oOTdKStH4GmAw6zxMFs50ZayuMfHDKlO7Tfw==",
            "dev": true,
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/helpers": {
            "version": "7.26.7",
            "resolved": "https://registry.npmjs.org/@babel/helpers/-/helpers-7.26.7.tgz",
            "integrity": "sha512-8NHiL98vsi0mbPQmYAGWwfcFaOy4j2HY49fXJCfuDcdE7fMIsH9a7GdaeXpIBsbT7307WU8KCMp5pUVDNL4f9A==",
            "dev": true,
            "dependencies": {
                "@babel/template": "^7.25.9",
                "@babel/types": "^7.26.7"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/parser": {
            "version": "7.26.8",
            "resolved": "https://registry.npmjs.org/@babel/parser/-/parser-7.26.8.tgz",
            "integrity": "sha512-TZIQ25pkSoaKEYYaHbbxkfL36GNsQ6iFiBbeuzAkLnXayKR1yP1zFe+NxuZWWsUyvt8icPU9CCq0sgWGXR1GEw==",
            "dev": true,
            "dependencies": {
                "@babel/types": "^7.26.8"
            },
            "bin": {
                "parser": "bin/babel-parser.js"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/@babel/plugin-transform-react-jsx-self": {
            "version": "7.25.9",
            "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-self/-/plugin-transform-react-jsx-self-7.25.9.tgz",
            "integrity": "sha512-y8quW6p0WHkEhmErnfe58r7x0A70uKphQm8Sp8cV7tjNQwK56sNVK0M73LK3WuYmsuyrftut4xAkjjgU0twaMg==",
            "dev": true,
            "dependencies": {
                "@babel/helper-plugin-utils": "^7.25.9"
            },
            "engines": {
                "node": ">=6.9.0"
            },
            "peerDependencies": {
                "@babel/core": "^7.0.0-0"
            }
        },
        "node_modules/@babel/plugin-transform-react-jsx-source": {
            "version": "7.25.9",
            "resolved": "https://registry.npmjs.org/@babel/plugin-transform-react-jsx-source/-/plugin-transform-react-jsx-source-7.25.9.tgz",
            "integrity": "sha512-+iqjT8xmXhhYv4/uiYd8FNQsraMFZIfxVSqxxVSZP0WbbSAWvBXAul0m/zu+7Vv4O/3WtApy9pmaTMiumEZgfg==",
            "dev": true,
            "dependencies": {
                "@babel/helper-plugin-utils": "^7.25.9"
            },
            "engines": {
                "node": ">=6.9.0"
            },
            "peerDependencies": {
                "@babel/core": "^7.0.0-0"
            }
        },
        "node_modules/@babel/template": {
            "version": "7.26.8",
            "resolved": "https://registry.npmjs.org/@babel/template/-/template-7.26.8.tgz",
            "integrity": "sha512-iNKaX3ZebKIsCvJ+0jd6embf+Aulaa3vNBqZ41kM7iTWjx5qzWKXGHiJUW3+nTpQ18SG11hdF8OAzKrpXkb96Q==",
            "dev": true,
            "dependencies": {
                "@babel/code-frame": "^7.26.2",
                "@babel/parser": "^7.26.8",
                "@babel/types": "^7.26.8"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/traverse": {
            "version": "7.26.8",
            "resolved": "https://registry.npmjs.org/@babel/traverse/-/traverse-7.26.8.tgz",
            "integrity": "sha512-nic9tRkjYH0oB2dzr/JoGIm+4Q6SuYeLEiIiZDwBscRMYFJ+tMAz98fuel9ZnbXViA2I0HVSSRRK8DW5fjXStA==",
            "dev": true,
            "dependencies": {
                "@babel/code-frame": "^7.26.2",
                "@babel/generator": "^7.26.8",
                "@babel/parser": "^7.26.8",
                "@babel/template": "^7.26.8",
                "@babel/types": "^7.26.8",
                "debug": "^4.3.1",
                "globals": "^11.1.0"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@babel/types": {
            "version": "7.26.8",
            "resolved": "https://registry.npmjs.org/@babel/types/-/types-7.26.8.tgz",
            "integrity": "sha512-eUuWapzEGWFEpHFxgEaBG8e3n6S8L3MSu0oda755rOfabWPnh0Our1AozNFVUxGFIhbKgd1ksprsoDGMinTOTA==",
            "dev": true,
            "dependencies": {
                "@babel/helper-string-parser": "^7.25.9",
                "@babel/helper-validator-identifier": "^7.25.9"
            },
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/@esbuild/android-arm": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/android-arm/-/android-arm-0.18.20.tgz",
            "integrity": "sha512-fyi7TDI/ijKKNZTUJAQqiG5T7YjJXgnzkURqmGj13C6dCqckZBLdl4h7bkhHt/t0WP+zO9/zwroDvANaOqO5Sw==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/android-arm64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/android-arm64/-/android-arm64-0.18.20.tgz",
            "integrity": "sha512-Nz4rJcchGDtENV0eMKUNa6L12zz2zBDXuhj/Vjh18zGqB44Bi7MBMSXjgunJgjRhCmKOjnPuZp4Mb6OKqtMHLQ==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/android-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/android-x64/-/android-x64-0.18.20.tgz",
            "integrity": "sha512-8GDdlePJA8D6zlZYJV/jnrRAi6rOiNaCC/JclcXpB+KIuvfBN4owLtgzY2bsxnx666XjJx2kDPUmnTtR8qKQUg==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "android"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/darwin-arm64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/darwin-arm64/-/darwin-arm64-0.18.20.tgz",
            "integrity": "sha512-bxRHW5kHU38zS2lPTPOyuyTm+S+eobPUnTNkdJEfAddYgEcll4xkT8DB9d2008DtTbl7uJag2HuE5NZAZgnNEA==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/darwin-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/darwin-x64/-/darwin-x64-0.18.20.tgz",
            "integrity": "sha512-pc5gxlMDxzm513qPGbCbDukOdsGtKhfxD1zJKXjCCcU7ju50O7MeAZ8c4krSJcOIJGFR+qx21yMMVYwiQvyTyQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/freebsd-arm64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/freebsd-arm64/-/freebsd-arm64-0.18.20.tgz",
            "integrity": "sha512-yqDQHy4QHevpMAaxhhIwYPMv1NECwOvIpGCZkECn8w2WFHXjEwrBn3CeNIYsibZ/iZEUemj++M26W3cNR5h+Tw==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "freebsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/freebsd-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/freebsd-x64/-/freebsd-x64-0.18.20.tgz",
            "integrity": "sha512-tgWRPPuQsd3RmBZwarGVHZQvtzfEBOreNuxEMKFcd5DaDn2PbBxfwLcj4+aenoh7ctXcbXmOQIn8HI6mCSw5MQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "freebsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-arm": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-arm/-/linux-arm-0.18.20.tgz",
            "integrity": "sha512-/5bHkMWnq1EgKr1V+Ybz3s1hWXok7mDFUMQ4cG10AfW3wL02PSZi5kFpYKrptDsgb2WAJIvRcDm+qIvXf/apvg==",
            "cpu": [
                "arm"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-arm64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-arm64/-/linux-arm64-0.18.20.tgz",
            "integrity": "sha512-2YbscF+UL7SQAVIpnWvYwM+3LskyDmPhe31pE7/aoTMFKKzIc9lLbyGUpmmb8a8AixOL61sQ/mFh3jEjHYFvdA==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-ia32": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-ia32/-/linux-ia32-0.18.20.tgz",
            "integrity": "sha512-P4etWwq6IsReT0E1KHU40bOnzMHoH73aXp96Fs8TIT6z9Hu8G6+0SHSw9i2isWrD2nbx2qo5yUqACgdfVGx7TA==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-loong64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.18.20.tgz",
            "integrity": "sha512-nXW8nqBTrOpDLPgPY9uV+/1DjxoQ7DoB2N8eocyq8I9XuqJ7BiAMDMf9n1xZM9TgW0J8zrquIb/A7s3BJv7rjg==",
            "cpu": [
                "loong64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-mips64el": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-mips64el/-/linux-mips64el-0.18.20.tgz",
            "integrity": "sha512-d5NeaXZcHp8PzYy5VnXV3VSd2D328Zb+9dEq5HE6bw6+N86JVPExrA6O68OPwobntbNJ0pzCpUFZTo3w0GyetQ==",
            "cpu": [
                "mips64el"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-ppc64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-ppc64/-/linux-ppc64-0.18.20.tgz",
            "integrity": "sha512-WHPyeScRNcmANnLQkq6AfyXRFr5D6N2sKgkFo2FqguP44Nw2eyDlbTdZwd9GYk98DZG9QItIiTlFLHJHjxP3FA==",
            "cpu": [
                "ppc64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-riscv64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-riscv64/-/linux-riscv64-0.18.20.tgz",
            "integrity": "sha512-WSxo6h5ecI5XH34KC7w5veNnKkju3zBRLEQNY7mv5mtBmrP/MjNBCAlsM2u5hDBlS3NGcTQpoBvRzqBcRtpq1A==",
            "cpu": [
                "riscv64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-s390x": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-s390x/-/linux-s390x-0.18.20.tgz",
            "integrity": "sha512-+8231GMs3mAEth6Ja1iK0a1sQ3ohfcpzpRLH8uuc5/KVDFneH6jtAJLFGafpzpMRO6DzJ6AvXKze9LfFMrIHVQ==",
            "cpu": [
                "s390x"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/linux-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/linux-x64/-/linux-x64-0.18.20.tgz",
            "integrity": "sha512-UYqiqemphJcNsFEskc73jQ7B9jgwjWrSayxawS6UVFZGWrAAtkzjxSqnoclCXxWtfwLdzU+vTpcNYhpn43uP1w==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "linux"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/netbsd-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/netbsd-x64/-/netbsd-x64-0.18.20.tgz",
            "integrity": "sha512-iO1c++VP6xUBUmltHZoMtCUdPlnPGdBom6IrO4gyKPFFVBKioIImVooR5I83nTew5UOYrk3gIJhbZh8X44y06A==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "netbsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/openbsd-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/openbsd-x64/-/openbsd-x64-0.18.20.tgz",
            "integrity": "sha512-e5e4YSsuQfX4cxcygw/UCPIEP6wbIL+se3sxPdCiMbFLBWu0eiZOJ7WoD+ptCLrmjZBK1Wk7I6D/I3NglUGOxg==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "openbsd"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/sunos-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/sunos-x64/-/sunos-x64-0.18.20.tgz",
            "integrity": "sha512-kDbFRFp0YpTQVVrqUd5FTYmWo45zGaXe0X8E1G/LKFC0v8x0vWrhOWSLITcCn63lmZIxfOMXtCfti/RxN/0wnQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "sunos"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/win32-arm64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-arm64/-/win32-arm64-0.18.20.tgz",
            "integrity": "sha512-ddYFR6ItYgoaq4v4JmQQaAI5s7npztfV4Ag6NrhiaW0RrnOXqBkgwZLofVTlq1daVTQNhtI5oieTvkRPfZrePg==",
            "cpu": [
                "arm64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/win32-ia32": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-ia32/-/win32-ia32-0.18.20.tgz",
            "integrity": "sha512-Wv7QBi3ID/rROT08SABTS7eV4hX26sVduqDOTe1MvGMjNd3EjOz4b7zeexIR62GTIEKrfJXKL9LFxTYgkyeu7g==",
            "cpu": [
                "ia32"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@esbuild/win32-x64": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/@esbuild/win32-x64/-/win32-x64-0.18.20.tgz",
            "integrity": "sha512-kTdfRcSiDfQca/y9QIkng02avJ+NCaQvrMejlsB3RRv5sE9rRoeBPISaZpKxHELzRxZyLvNts1P27W3wV+8geQ==",
            "cpu": [
                "x64"
            ],
            "dev": true,
            "optional": true,
            "os": [
                "win32"
            ],
            "engines": {
                "node": ">=12"
            }
        },
        "node_modules/@jridgewell/gen-mapping": {
            "version": "0.3.8",
            "resolved": "https://registry.npmjs.org/@jridgewell/gen-mapping/-/gen-mapping-0.3.8.tgz",
            "integrity": "sha512-imAbBGkb+ebQyxKgzv5Hu2nmROxoDOXHh80evxdoXNOrvAnVx7zimzc1Oo5h9RlfV4vPXaE2iM5pOFbvOCClWA==",
            "dev": true,
            "dependencies": {
                "@jridgewell/set-array": "^1.2.1",
                "@jridgewell/sourcemap-codec": "^1.4.10",
                "@jridgewell/trace-mapping": "^0.3.24"
            },
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/@jridgewell/resolve-uri": {
            "version": "3.1.2",
            "resolved": "https://registry.npmjs.org/@jridgewell/resolve-uri/-/resolve-uri-3.1.2.tgz",
            "integrity": "sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==",
            "dev": true,
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/@jridgewell/set-array": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/@jridgewell/set-array/-/set-array-1.2.1.tgz",
            "integrity": "sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==",
            "dev": true,
            "engines": {
                "node": ">=6.0.0"
            }
        },
        "node_modules/@jridgewell/sourcemap-codec": {
            "version": "1.5.0",
            "resolved": "https://registry.npmjs.org/@jridgewell/sourcemap-codec/-/sourcemap-codec-1.5.0.tgz",
            "integrity": "sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==",
            "dev": true
        },
        "node_modules/@jridgewell/trace-mapping": {
            "version": "0.3.25",
            "resolved": "https://registry.npmjs.org/@jridgewell/trace-mapping/-/trace-mapping-0.3.25.tgz",
            "integrity": "sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==",
            "dev": true,
            "dependencies": {
                "@jridgewell/resolve-uri": "^3.1.0",
                "@jridgewell/sourcemap-codec": "^1.4.14"
            }
        },
        "node_modules/@types/babel__core": {
            "version": "7.20.5",
            "resolved": "https://registry.npmjs.org/@types/babel__core/-/babel__core-7.20.5.tgz",
            "integrity": "sha512-qoQprZvz5wQFJwMDqeseRXWv3rqMvhgpbXFfVyWhbx9X47POIA6i/+dXefEmZKoAgOaTdaIgNSMqMIU61yRyzA==",
            "dev": true,
            "dependencies": {
                "@babel/parser": "^7.20.7",
                "@babel/types": "^7.20.7",
                "@types/babel__generator": "*",
                "@types/babel__template": "*",
                "@types/babel__traverse": "*"
            }
        },
        "node_modules/@types/babel__generator": {
            "version": "7.6.8",
            "resolved": "https://registry.npmjs.org/@types/babel__generator/-/babel__generator-7.6.8.tgz",
            "integrity": "sha512-ASsj+tpEDsEiFr1arWrlN6V3mdfjRMZt6LtK/Vp/kreFLnr5QH5+DhvD5nINYZXzwJvXeGq+05iUXcAzVrqWtw==",
            "dev": true,
            "dependencies": {
                "@babel/types": "^7.0.0"
            }
        },
        "node_modules/@types/babel__template": {
            "version": "7.4.4",
            "resolved": "https://registry.npmjs.org/@types/babel__template/-/babel__template-7.4.4.tgz",
            "integrity": "sha512-h/NUaSyG5EyxBIp8YRxo4RMe2/qQgvyowRwVMzhYhBCONbW8PUsg4lkFMrhgZhUe5z3L3MiLDuvyJ/CaPa2A8A==",
            "dev": true,
            "dependencies": {
                "@babel/parser": "^7.1.0",
                "@babel/types": "^7.0.0"
            }
        },
        "node_modules/@types/babel__traverse": {
            "version": "7.20.6",
            "resolved": "https://registry.npmjs.org/@types/babel__traverse/-/babel__traverse-7.20.6.tgz",
            "integrity": "sha512-r1bzfrm0tomOI8g1SzvCaQHo6Lcv6zu0EA+W2kHrt8dyrHQxGzBBL4kdkzIS+jBMV+EYcMAEAqXqYaLJq5rOZg==",
            "dev": true,
            "dependencies": {
                "@babel/types": "^7.20.7"
            }
        },
        "node_modules/@types/gensync": {
            "version": "1.0.4",
            "resolved": "https://registry.npmjs.org/@types/gensync/-/gensync-1.0.4.tgz",
            "integrity": "sha512-C3YYeRQWp2fmq9OryX+FoDy8nXS6scQ7dPptD8LnFDAUNcKWJjXQKDNJD3HVm+kOUsXhTOkpi69vI4EuAr95bA==",
            "dev": true
        },
        "node_modules/@vitejs/plugin-react": {
            "version": "4.3.4",
            "resolved": "https://registry.npmjs.org/@vitejs/plugin-react/-/plugin-react-4.3.4.tgz",
            "integrity": "sha512-SCCPBJtYLdE8PX/7ZQAs1QAZ8Jqwih+0VBLum1EGqmCCQal+MIUqLCzj3ZUy8ufbC0cAM4LRlSTm7IQJwWT4ug==",
            "dev": true,
            "dependencies": {
                "@babel/core": "^7.26.0",
                "@babel/plugin-transform-react-jsx-self": "^7.25.9",
                "@babel/plugin-transform-react-jsx-source": "^7.25.9",
                "@types/babel__core": "^7.20.5",
                "react-refresh": "^0.14.2"
            },
            "engines": {
                "node": "^14.18.0 || >=16.0.0"
            },
            "peerDependencies": {
                "vite": "^4.2.0 || ^5.0.0 || ^6.0.0"
            }
        },
        "node_modules/browserslist": {
            "version": "4.24.4",
            "resolved": "https://registry.npmjs.org/browserslist/-/browserslist-4.24.4.tgz",
            "integrity": "sha512-KDi1Ny1gSePi1vm0q4oxSF8b4DR44GF4BbmS2YdhPLOEqd8pDviZOGH/GsmRwoWJ2+5Lr085X7naowMwKHDG1A==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/browserslist"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/browserslist"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "caniuse-lite": "^1.0.30001688",
                "electron-to-chromium": "^1.5.73",
                "node-releases": "^2.0.19",
                "update-browserslist-db": "^1.1.1"
            },
            "bin": {
                "browserslist": "cli.js"
            },
            "engines": {
                "node": "^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7"
            }
        },
        "node_modules/caniuse-lite": {
            "version": "1.0.30001699",
            "resolved": "https://registry.npmjs.org/caniuse-lite/-/caniuse-lite-1.0.30001699.tgz",
            "integrity": "sha512-b+uH5BakXZ9Do9iK+CkDmctUSEqZl+SP056vc5usa0PL+ev5OHw003rZXcnjNDv3L8P5j6rwT6C0BPKSikW08w==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/browserslist"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/caniuse-lite"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ]
        },
        "node_modules/convert-source-map": {
            "version": "2.0.0",
            "resolved": "https://registry.npmjs.org/convert-source-map/-/convert-source-map-2.0.0.tgz",
            "integrity": "sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==",
            "dev": true
        },
        "node_modules/debug": {
            "version": "4.4.0",
            "resolved": "https://registry.npmjs.org/debug/-/debug-4.4.0.tgz",
            "integrity": "sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==",
            "dev": true,
            "dependencies": {
                "ms": "^2.1.3"
            },
            "engines": {
                "node": ">=6.0"
            },
            "peerDependenciesMeta": {
                "supports-color": {
                    "optional": true
                }
            }
        },
        "node_modules/electron-to-chromium": {
            "version": "1.5.100",
            "resolved": "https://registry.npmjs.org/electron-to-chromium/-/electron-to-chromium-1.5.100.tgz",
            "integrity": "sha512-u1z9VuzDXV86X2r3vAns0/5ojfXBue9o0+JDUDBKYqGLjxLkSqsSUoPU/6kW0gx76V44frHaf6Zo+QF74TQCMg==",
            "dev": true
        },
        "node_modules/esbuild": {
            "version": "0.18.20",
            "resolved": "https://registry.npmjs.org/esbuild/-/esbuild-0.18.20.tgz",
            "integrity": "sha512-ceqxoedUrcayh7Y7ZX6NdbbDzGROiyVBgC4PriJThBKSVPWnnFHZAkfI1lJT8QFkOwH4qOS2SJkS4wvpGl8BpA==",
            "dev": true,
            "hasInstallScript": true,
            "bin": {
                "esbuild": "bin/esbuild"
            },
            "engines": {
                "node": ">=12"
            },
            "optionalDependencies": {
                "@esbuild/android-arm": "0.18.20",
                "@esbuild/android-arm64": "0.18.20",
                "@esbuild/android-x64": "0.18.20",
                "@esbuild/darwin-arm64": "0.18.20",
                "@esbuild/darwin-x64": "0.18.20",
                "@esbuild/freebsd-arm64": "0.18.20",
                "@esbuild/freebsd-x64": "0.18.20",
                "@esbuild/linux-arm": "0.18.20",
                "@esbuild/linux-arm64": "0.18.20",
                "@esbuild/linux-ia32": "0.18.20",
                "@esbuild/linux-loong64": "0.18.20",
                "@esbuild/linux-mips64el": "0.18.20",
                "@esbuild/linux-ppc64": "0.18.20",
                "@esbuild/linux-riscv64": "0.18.20",
                "@esbuild/linux-s390x": "0.18.20",
                "@esbuild/linux-x64": "0.18.20",
                "@esbuild/netbsd-x64": "0.18.20",
                "@esbuild/openbsd-x64": "0.18.20",
                "@esbuild/sunos-x64": "0.18.20",
                "@esbuild/win32-arm64": "0.18.20",
                "@esbuild/win32-ia32": "0.18.20",
                "@esbuild/win32-x64": "0.18.20"
            }
        },
        "node_modules/escalade": {
            "version": "3.2.0",
            "resolved": "https://registry.npmjs.org/escalade/-/escalade-3.2.0.tgz",
            "integrity": "sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==",
            "dev": true,
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/fsevents": {
            "version": "2.3.3",
            "resolved": "https://registry.npmjs.org/fsevents/-/fsevents-2.3.3.tgz",
            "integrity": "sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==",
            "dev": true,
            "hasInstallScript": true,
            "optional": true,
            "os": [
                "darwin"
            ],
            "engines": {
                "node": "^8.16.0 || ^10.6.0 || >=11.0.0"
            }
        },
        "node_modules/gensync": {
            "version": "1.0.0-beta.2",
            "resolved": "https://registry.npmjs.org/gensync/-/gensync-1.0.0-beta.2.tgz",
            "integrity": "sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==",
            "dev": true,
            "engines": {
                "node": ">=6.9.0"
            }
        },
        "node_modules/globals": {
            "version": "11.12.0",
            "resolved": "https://registry.npmjs.org/globals/-/globals-11.12.0.tgz",
            "integrity": "sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==",
            "dev": true,
            "engines": {
                "node": ">=4"
            }
        },
        "node_modules/js-tokens": {
            "version": "4.0.0",
            "resolved": "https://registry.npmjs.org/js-tokens/-/js-tokens-4.0.0.tgz",
            "integrity": "sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ=="
        },
        "node_modules/jsesc": {
            "version": "3.1.0",
            "resolved": "https://registry.npmjs.org/jsesc/-/jsesc-3.1.0.tgz",
            "integrity": "sha512-/sM3dO2FOzXjKQhJuo0Q173wf2KOo8t4I8vHy6lF9poUp7bKT0/NHE8fPX23PwfhnykfqnC2xRxOnVw5XuGIaA==",
            "dev": true,
            "bin": {
                "jsesc": "bin/jsesc"
            },
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/json5": {
            "version": "2.2.3",
            "resolved": "https://registry.npmjs.org/json5/-/json5-2.2.3.tgz",
            "integrity": "sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==",
            "dev": true,
            "bin": {
                "json5": "lib/cli.js"
            },
            "engines": {
                "node": ">=6"
            }
        },
        "node_modules/loose-envify": {
            "version": "1.4.0",
            "resolved": "https://registry.npmjs.org/loose-envify/-/loose-envify-1.4.0.tgz",
            "integrity": "sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==",
            "dependencies": {
                "js-tokens": "^3.0.0 || ^4.0.0"
            },
            "bin": {
                "loose-envify": "cli.js"
            }
        },
        "node_modules/lru-cache": {
            "version": "5.1.1",
            "resolved": "https://registry.npmjs.org/lru-cache/-/lru-cache-5.1.1.tgz",
            "integrity": "sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==",
            "dev": true,
            "dependencies": {
                "yallist": "^3.0.2"
            }
        },
        "node_modules/ms": {
            "version": "2.1.3",
            "resolved": "https://registry.npmjs.org/ms/-/ms-2.1.3.tgz",
            "integrity": "sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==",
            "dev": true
        },
        "node_modules/nanoid": {
            "version": "3.3.8",
            "resolved": "https://registry.npmjs.org/nanoid/-/nanoid-3.3.8.tgz",
            "integrity": "sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==",
            "dev": true,
            "funding": [
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "bin": {
                "nanoid": "bin/nanoid.cjs"
            },
            "engines": {
                "node": "^10 || ^12 || ^13.7 || ^14 || >=15.0.1"
            }
        },
        "node_modules/node-releases": {
            "version": "2.0.19",
            "resolved": "https://registry.npmjs.org/node-releases/-/node-releases-2.0.19.tgz",
            "integrity": "sha512-xxOWJsBKtzAq7DY0J+DTzuz58K8e7sJbdgwkbMWQe8UYB6ekmsQ45q0M/tJDsGaZmbC+l7n57UV8Hl5tHxO9uw==",
            "dev": true
        },
        "node_modules/picocolors": {
            "version": "1.1.1",
            "resolved": "https://registry.npmjs.org/picocolors/-/picocolors-1.1.1.tgz",
            "integrity": "sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==",
            "dev": true
        },
        "node_modules/postcss": {
            "version": "8.5.2",
            "resolved": "https://registry.npmjs.org/postcss/-/postcss-8.5.2.tgz",
            "integrity": "sha512-MjOadfU3Ys9KYoX0AdkBlFEF1Vx37uCCeN4ZHnmwm9FfpbsGWMZeBLMmmpY+6Ocqod7mkdZ0DT31OlbsFrLlkA==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/postcss/"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/postcss"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "nanoid": "^3.3.8",
                "picocolors": "^1.1.1",
                "source-map-js": "^1.2.1"
            },
            "engines": {
                "node": "^10 || ^12 || >=14"
            }
        },
        "node_modules/react": {
            "version": "18.3.1",
            "resolved": "https://registry.npmjs.org/react/-/react-18.3.1.tgz",
            "integrity": "sha512-wS+hAgJShR0KhEvPJArfuPVN1+Hz1t0Y6n5jLrGQbkb4urgPE/0Rve+1kMB1v/oWgHgm4WIcV+i7F2pTVj+2iQ==",
            "dependencies": {
                "loose-envify": "^1.1.0"
            },
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/react-dom": {
            "version": "18.3.1",
            "resolved": "https://registry.npmjs.org/react-dom/-/react-dom-18.3.1.tgz",
            "integrity": "sha512-5m4nQKp+rZRb09LNH59GM4BxTh9251/ylbKIbpe7TpGxfJ+9kv6BLkLBXIjjspbgbnIBNqlI23tRnTWT0snUIw==",
            "dependencies": {
                "loose-envify": "^1.1.0",
                "scheduler": "^0.23.2"
            },
            "peerDependencies": {
                "react": "^18.3.1"
            }
        },
        "node_modules/react-refresh": {
            "version": "0.14.2",
            "resolved": "https://registry.npmjs.org/react-refresh/-/react-refresh-0.14.2.tgz",
            "integrity": "sha512-jCvmsr+1IUSMUyzOkRcvnVbX3ZYC6g9TDrDbFuFmRDq7PD4yaGbLKNQL6k2jnArV8hjYxh7hVhAZB6s9HDGpZA==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/rollup": {
            "version": "3.29.5",
            "resolved": "https://registry.npmjs.org/rollup/-/rollup-3.29.5.tgz",
            "integrity": "sha512-GVsDdsbJzzy4S/v3dqWPJ7EfvZJfCHiDqe80IyrF59LYuP+e6U1LJoUqeuqRbwAWoMNoXivMNeNAOf5E22VA1w==",
            "dev": true,
            "bin": {
                "rollup": "dist/bin/rollup"
            },
            "engines": {
                "node": ">=14.18.0",
                "npm": ">=8.0.0"
            },
            "optionalDependencies": {
                "fsevents": "~2.3.2"
            }
        },
        "node_modules/scheduler": {
            "version": "0.23.2",
            "resolved": "https://registry.npmjs.org/scheduler/-/scheduler-0.23.2.tgz",
            "integrity": "sha512-UOShsPwz7NrMUqhR6t0hWjFduvOzbtv7toDH1/hIrfRNIDBnnBWd0CwJTGvTpngVlmwGCdP9/Zl/tVrDqcuYzQ==",
            "dependencies": {
                "loose-envify": "^1.1.0"
            }
        },
        "node_modules/semver": {
            "version": "6.3.1",
            "resolved": "https://registry.npmjs.org/semver/-/semver-6.3.1.tgz",
            "integrity": "sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==",
            "dev": true,
            "bin": {
                "semver": "bin/semver.js"
            }
        },
        "node_modules/source-map-js": {
            "version": "1.2.1",
            "resolved": "https://registry.npmjs.org/source-map-js/-/source-map-js-1.2.1.tgz",
            "integrity": "sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==",
            "dev": true,
            "engines": {
                "node": ">=0.10.0"
            }
        },
        "node_modules/update-browserslist-db": {
            "version": "1.1.2",
            "resolved": "https://registry.npmjs.org/update-browserslist-db/-/update-browserslist-db-1.1.2.tgz",
            "integrity": "sha512-PPypAm5qvlD7XMZC3BujecnaOxwhrtoFR+Dqkk5Aa/6DssiH0ibKoketaj9w8LP7Bont1rYeoV5plxD7RTEPRg==",
            "dev": true,
            "funding": [
                {
                    "type": "opencollective",
                    "url": "https://opencollective.com/browserslist"
                },
                {
                    "type": "tidelift",
                    "url": "https://tidelift.com/funding/github/npm/browserslist"
                },
                {
                    "type": "github",
                    "url": "https://github.com/sponsors/ai"
                }
            ],
            "dependencies": {
                "escalade": "^3.2.0",
                "picocolors": "^1.1.1"
            },
            "bin": {
                "update-browserslist-db": "cli.js"
            },
            "peerDependencies": {
                "browserslist": ">= 4.21.0"
            }
        },
        "node_modules/vite": {
            "version": "4.5.9",
            "resolved": "https://registry.npmjs.org/vite/-/vite-4.5.9.tgz",
            "integrity": "sha512-qK9W4xjgD3gXbC0NmdNFFnVFLMWSNiR3swj957yutwzzN16xF/E7nmtAyp1rT9hviDroQANjE4HK3H4WqWdFtw==",
            "dev": true,
            "dependencies": {
                "esbuild": "^0.18.10",
                "postcss": "^8.4.27",
                "rollup": "^3.27.1"
            },
            "bin": {
                "vite": "bin/vite.js"
            },
            "engines": {
                "node": "^14.18.0 || >=16.0.0"
            },
            "funding": {
                "url": "https://github.com/vitejs/vite?sponsor=1"
            },
            "optionalDependencies": {
                "fsevents": "~2.3.2"
            },
            "peerDependencies": {
                "@types/node": ">= 14",
                "less": "*",
                "lightningcss": "^1.21.0",
                "sass": "*",
                "stylus": "*",
                "sugarss": "*",
                "terser": "^5.4.0"
            },
            "peerDependenciesMeta": {
                "@types/node": {
                    "optional": true
                },
                "less": {
                    "optional": true
                },
                "lightningcss": {
                    "optional": true
                },
                "sass": {
                    "optional": true
                },
                "stylus": {
                    "optional": true
                },
                "sugarss": {
                    "optional": true
                },
                "terser": {
                    "optional": true
                }
            }
        },
        "node_modules/yallist": {
            "version": "3.1.1",
            "resolved": "https://registry.npmjs.org/yallist/-/yallist-3.1.1.tgz",
            "integrity": "sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==",
            "dev": true
        }
    }
}


================================================
File: frontend/package.json
================================================
{
    "name": "gunpla-frontend",
    "version": "1.0.0",
    "private": true,
    "scripts": {
      "dev": "vite",
      "build": "vite build",
      "preview": "vite preview"
    },
    "dependencies": {
      "react": "^18.2.0",
      "react-dom": "^18.2.0"
    },
    "devDependencies": {
      "@vitejs/plugin-react": "^4.0.0",
      "vite": "^4.0.0"
    }
  }

================================================
File: frontend/sanity-check.js
================================================
// sanity-check.js
const codespaceName = process.env.CODESPACE_NAME;
const flaskPort = process.env.FLASK_PORT || "5000";

if (!codespaceName) {
  console.error("❌ ERROR: CODESPACE_NAME is not set. Make sure you're running this inside GitHub Codespaces.");
  process.exit(1);
}

const targetUrl = `https://${codespaceName}-${flaskPort}.app.github.dev`;

console.log("✅ Sanity check passed!");
console.log(`CODESPACE_NAME: ${codespaceName}`);
console.log(`Flask API Target URL: ${targetUrl}`);

================================================
File: frontend/vite.config.js
================================================
// flask-gunpla-react-app/vite.config.js
import { defineConfig, loadEnv } from 'vite';
import react from '@vitejs/plugin-react';

// Load environment variables
export default defineConfig(({ mode }) => {
  // Load environment variables based on the mode (e.g., 'development' or 'production')
  const env = loadEnv(mode, process.cwd(), '');

  // Use environment variables, ensuring Vite handles them correctly
  const codespaceName = env.VITE_CODESPACE_NAME;
  const flaskPort = env.VITE_FLASK_PORT || "5000";

  // Determine the target URL for the Flask API
  const target = codespaceName
    ? `https://${codespaceName}-${flaskPort}.app.github.dev`
    : "http://localhost:5000";

  return {
    plugins: [react()],
    server: {
      proxy: {
        // Proxy API requests from /gunplas to the dynamic Flask API URL
        '/gunplas': {
          target,
          changeOrigin: true,
          secure: false, // If needed for self-signed SSL certificates
        }
      }
    }
  };
});

================================================
File: frontend/src/App.jsx
================================================
import React from 'react';
import GunplaForm from './components/GunplaForm';
import GunplaList from './components/GunplaList';

function App() {
  return (
    <div style={{ maxWidth: '800px', margin: '0 auto', padding: '1rem' }}>
      <h1>Gunpla Models Manager</h1>
      <GunplaForm />
      <GunplaList />
    </div>
  );
}

export default App;

================================================
File: frontend/src/index.css
================================================
/* index.css */
body {
    font-family: Arial, sans-serif;
  }

================================================
File: frontend/src/main.jsx
================================================
import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App';
import { GunplaProvider } from './context/GunplaContext';
import './index.css';

ReactDOM.createRoot(document.getElementById('root')).render(
  <React.StrictMode>
    <GunplaProvider>
      <App />
    </GunplaProvider>
  </React.StrictMode>
);

================================================
File: frontend/src/components/GunplaForm.jsx
================================================
import React, { useState, useContext, useEffect } from 'react';
import { GunplaContext } from '../context/GunplaContext';

const initialFormState = {
  name: '',
  series: '',
  grade: '',
  scale: ''
};

function GunplaForm() {
  const { addGunpla, updateGunpla, selectedGunpla, setSelectedGunpla } = useContext(GunplaContext);
  const [formData, setFormData] = useState(initialFormState);

  useEffect(() => {
    if (selectedGunpla) {
      setFormData(selectedGunpla);
    } else {
      setFormData(initialFormState);
    }
  }, [selectedGunpla]);

  const handleChange = (e) => {
    const { name, value } = e.target;
    setFormData(prev => ({ ...prev, [name]: value }));
  };

  const handleSubmit = (e) => {
    e.preventDefault();
    if (selectedGunpla) {
      updateGunpla(selectedGunpla.id, formData);
      setSelectedGunpla(null);
    } else {
      addGunpla(formData);
    }
    setFormData(initialFormState);
  };

  const handleCancel = () => {
    setSelectedGunpla(null);
    setFormData(initialFormState);
  };

  return (
    <div style={{ marginBottom: '2rem' }}>
      <h2>{selectedGunpla ? 'Edit Gunpla' : 'Add New Gunpla'}</h2>
      <form onSubmit={handleSubmit}>
        <div>
          <label>Name:</label><br />
          <input
            type="text"
            name="name"
            value={formData.name}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label>Series:</label><br />
          <input
            type="text"
            name="series"
            value={formData.series}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label>Grade:</label><br />
          <input
            type="text"
            name="grade"
            value={formData.grade}
            onChange={handleChange}
            required
          />
        </div>
        <div>
          <label>Scale:</label><br />
          <input
            type="text"
            name="scale"
            value={formData.scale}
            onChange={handleChange}
          />
        </div>
        <button type="submit" style={{ marginRight: '1rem' }}>
          {selectedGunpla ? 'Update' : 'Add'}
        </button>
        {selectedGunpla && (
          <button type="button" onClick={handleCancel}>
            Cancel
          </button>
        )}
      </form>
    </div>
  );
}

export default GunplaForm;

================================================
File: frontend/src/components/GunplaItem.jsx
================================================
import React, { useContext } from 'react';
import { GunplaContext } from '../context/GunplaContext';

function GunplaItem({ gunpla }) {
  const { deleteGunpla, setSelectedGunpla } = useContext(GunplaContext);

  return (
    <li style={{
      border: '1px solid #ccc',
      padding: '1rem',
      marginBottom: '1rem'
    }}>
      <h3>{gunpla.name}</h3>
      <p><strong>Series:</strong> {gunpla.series}</p>
      <p><strong>Grade:</strong> {gunpla.grade}</p>
      <p><strong>Scale:</strong> {gunpla.scale}</p>
      <button onClick={() => setSelectedGunpla(gunpla)} style={{ marginRight: '1rem' }}>
        Edit
      </button>
      <button onClick={() => deleteGunpla(gunpla.id)}>
        Delete
      </button>
    </li>
  );
}

export default GunplaItem;

================================================
File: frontend/src/components/GunplaList.jsx
================================================
import React, { useContext } from 'react';
import { GunplaContext } from '../context/GunplaContext';
import GunplaItem from './GunplaItem';

function GunplaList() {
  const { gunplas, loading, error } = useContext(GunplaContext);

  if (loading) return <p>Loading gunpla models...</p>;
  if (error) return <p>Error: {error}</p>;

  return (
    <div>
      <h2>Gunpla Models List</h2>
      {gunplas.length === 0 ? (
        <p>No gunpla models found.</p>
      ) : (
        <ul style={{ listStyleType: 'none', padding: 0 }}>
          {gunplas.map(gunpla => (
            <GunplaItem key={gunpla.id} gunpla={gunpla} />
          ))}
        </ul>
      )}
    </div>
  );
}

export default GunplaList;

================================================
File: frontend/src/context/GunplaContext.jsx
================================================
import React, { createContext, useState, useEffect } from 'react';

export const GunplaContext = createContext();

export const GunplaProvider = ({ children }) => {
  // Use environment variable if available; otherwise, use relative paths (to work with Vite proxy)
  const API_URL = import.meta.env.VITE_API_URL || '';

  const [gunplas, setGunplas] = useState([]);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(null);
  const [selectedGunpla, setSelectedGunpla] = useState(null); // For editing

  const fetchGunplas = async () => {
    setLoading(true);
    try {
      const response = await fetch(`${API_URL}/gunplas`);
      if (!response.ok) {
        throw new Error('Failed to fetch gunplas');
      }
      const data = await response.json();
      setGunplas(data);
    } catch (err) {
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  const addGunpla = async (gunpla) => {
    try {
      const response = await fetch(`${API_URL}/gunplas`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(gunpla)
      });
      if (!response.ok) {
        throw new Error('Failed to add gunpla');
      }
      const data = await response.json();
      setGunplas(prev => [...prev, data]);
    } catch (err) {
      setError(err.message);
    }
  };

  const updateGunpla = async (id, updatedGunpla) => {
    try {
      const response = await fetch(`${API_URL}/gunplas/${id}`, {
        method: 'PUT',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify(updatedGunpla)
      });
      if (!response.ok) {
        throw new Error('Failed to update gunpla');
      }
      const data = await response.json();
      setGunplas(prev => prev.map(g => (g.id === id ? data : g)));
    } catch (err) {
      setError(err.message);
    }
  };

  const deleteGunpla = async (id) => {
    try {
      const response = await fetch(`${API_URL}/gunplas/${id}`, {
        method: 'DELETE'
      });
      if (!response.ok) {
        throw new Error('Failed to delete gunpla');
      }
      setGunplas(prev => prev.filter(g => g.id !== id));
    } catch (err) {
      setError(err.message);
    }
  };

  useEffect(() => {
    fetchGunplas();
  }, []);

  return (
    <GunplaContext.Provider value={{
      gunplas,
      loading,
      error,
      fetchGunplas,
      addGunpla,
      updateGunpla,
      deleteGunpla,
      selectedGunpla,
      setSelectedGunpla
    }}>
      {children}
    </GunplaContext.Provider>
  );
};

Is there a way to run both the dev backend and the dev frontend from the same IP so that I don't have to do CORS?